package c04;

/**
 * Created by Zack on 2017/5/23.
 */
public class Main_c04 {
    /**
     * 简单工厂，工厂方法，抽象工厂都属于设计模式中的创建型模式。
     * 其主要功能都是帮助我们把对象的实例化部分抽取了出来，
     * 优化了系统的架构，并且增强了系统的扩展性。
     *
     * 简单工厂
     * 简单工厂模式的工厂类一般是使用静态方法，通过接收的参数的不同来返回不同的对象实例。
     * 不修改代码的话，是无法扩展的。
     *
     * 工厂方法
     * 工厂方法是针对每一种产品提供一个工厂类。通过不同的工厂实例来创建不同的产品实例。
     * 在同一等级结构中，支持增加任意产品。
     *
     * 抽象工厂
     * 抽象工厂是应对产品族概念的。比如说，每个汽车公司可能要同时生产轿车，货车，客车，那么每一个工厂都要有创建轿车，货车和客车的方法。
     * 应对产品族概念而生，增加新的产品线很容易，但是无法增加新的产品。
     */
    public static void main(String[] args) {
        //工厂方法模式定义了一个创建对象的接口，但由子类决定要实例化的类是哪一个。
        //工厂方法让类把实例化推迟到子类。

        //抽象工厂模式提供一个接口，用于创建相关或依赖对象的家族，而不需要明确指定具体类。
        PizzaStore store = new ChicagoStylePizzaStore();
        store.orderPizza("cheese");
        store.orderPizza("veggie");

    }
}
